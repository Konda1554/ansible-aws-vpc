- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      include_vars: vars/vpc_setup
    - name: Create Project VPC
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"
      register: vpcout
  #  - debug:
  #      var: vpcout
    - name: create pub sub1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: Project-pubsub1
      register: pubsub1_out
    - name: create pub sub2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}"
        map_public: yes
        resource_tags:
          Name: Project-pubsub2
      register: pubsub2_out
    - name: create priv sub1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PrivSub1Cidr}}"
        resource_tags:
          Name: Project-privsub1
      register: privsub1_out
    - name: create priv sub2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PrivSub2Cidr}}"
        resource_tags:
          Name: Project-privsub2
      register: privsub2_out
    - name: Create IGW setup
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
          Name: Project-IGW
      register: igw_out
    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Project-RT
        subnets:
          - "{{ pubsub1_out.subnet.id }}"
          - "{{ pubsub2_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_out.gateway_id }}"
      register: RT_out
    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{ pubsub1_out.subnet.id }}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
      register: nat_out
    - name: Set up private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: Project-private-RT
        subnets:
          - "{{ privsub1_out.subnet.id }}"
          - "{{ privsub2_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ nat_out.nat_gateway_id }}"
      register: privatenat_out
    - debug:
        var: "{{item}}"
      loop:
        - vpcout.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - igw_out.gateway_id
        - RT_out.route_table.id
        - nat_out.nat_gateway_id
        - privatenat_out.route_table.id

    - set_fact:
        vpcid: "{{vpcout.vpc.id}}"
        pubsub1id: "{{ pubsub1_out.subnet.id }}"
        pubsub2id: "{{ pubsub2_out.subnet.id }}"
        privsub1id: "{{ privsub1_out.subnet.id }}"
        privsub2id: "{{ privsub2_out.subnet.id }}"
        igwid: "{{igw_out.gateway_id}}"
        pubRT: "{{RT_out.route_table.id}}"
        natgwid: "{{nat_out.nat_gateway_id}}"
        privRt: "{{privatenat_out.route_table.id}}"
        cacheable:  yes

    - name : create copy file vpc output
      copy:
        content: "vpcid: {{vpcout.vpc.id}}\npubsub1id: {{ pubsub1_out.subnet.id }}\npubsub2id: {{ pubsub2_out.subnet.id }}\nprivsub1id: {{ privsub1_out.subnet.id }}\nprivsub2id: {{ privsub2_out.subnet.id }}\nigwid: {{igw_out.gateway_id}}\npubRT: {{RT_out.route_table.id}}\nnatgwid: {{nat_out.nat_gateway_id}}\nprivRt: {{privatenat_out.route_table.id}}"
        dest: vars/output_vars















